/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
export async function sendTelegramNotification(message: string): Promise<boolean> {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const token = process.env.TELEGRAM_BOT_TOKEN
    const chatId = process.env.TELEGRAM_CHAT_ID

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!token || !chatId) {
      console.error("Missing TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID environment variables")
      return false
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è API Telegram
    const url = `https://api.telegram.org/bot${token}/sendMessage`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram
    const response = await fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: "Markdown",
      }),
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    if (!response.ok) {
      const errorData = await response.json()
      console.error("Telegram API error:", errorData)
      return false
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = await response.json()
    console.log("Telegram notification sent successfully:", result)
    return true
  } catch (error) {
    console.error("Error sending Telegram notification:", error)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
export async function sendAppointmentNotification(data: {
  name: string
  email: string
  phone: string
  date: string
  time: string
  service: string
  message?: string
}): Promise<boolean> {
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
  const telegramMessage = `
üìÖ *–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!*

üë§ *–ò–º—è:* ${data.name}
üìß *Email:* ${data.email}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone}
üóìÔ∏è *–î–∞—Ç–∞:* ${data.date}
‚è∞ *–í—Ä–µ–º—è:* ${data.time}
üíº *–£—Å–ª—É–≥–∞:* ${data.service}
${data.message ? `üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${data.message}\n` : ""}
  `

  return sendTelegramNotification(telegramMessage)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º–µ
export async function sendContactNotification(data: {
  name: string
  email: string
  phone: string
  message: string
  subject?: string
}): Promise<boolean> {
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
  const telegramMessage = `
üì¨ *–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞!*

üë§ *–ò–º—è:* ${data.name}
üìß *Email:* ${data.email}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone}
${data.subject ? `üìã *–¢–µ–º–∞:* ${data.subject}\n` : ""}
üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* 
${data.message}
  `

  return sendTelegramNotification(telegramMessage)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram
export async function testTelegramConnection(): Promise<{
  success: boolean
  message: string
}> {
  try {
    const sent = await sendTelegramNotification("üß™ *–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ* üß™\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API")

    if (sent) {
      return {
        success: true,
        message: "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram",
      }
    } else {
      return {
        success: false,
        message: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram",
      }
    }
  } catch (error) {
    console.error("Test Telegram connection error:", error)
    return {
      success: false,
      message: `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram: ${error}`,
    }
  }
}
